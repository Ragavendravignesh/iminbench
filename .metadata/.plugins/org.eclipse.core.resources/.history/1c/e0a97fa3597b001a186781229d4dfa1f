package com.example.demo.controller;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import com.example.demo.dto.FresherDTO;
import com.example.demo.dto.ProjectDTO;
import com.example.demo.exception.ProjectException;
import com.example.demo.service.ProjectService;

@CrossOrigin(origins="*", allowedHeaders = "*")
@RestController
public class ProjectController {
	
	@Autowired
	private ProjectService projectService;
	
	@GetMapping("/getProjects")
	public ResponseEntity<List<ProjectDTO>> getProjects() throws ProjectException{
		List<ProjectDTO> list=projectService.getProjects();
		return new ResponseEntity<List<ProjectDTO>>(list,HttpStatus.OK);
	}
	
	@GetMapping("/getProject/{prjid}")
	public ResponseEntity<ProjectDTO> getProject(@PathVariable String prjid) throws ProjectException{
		ProjectDTO projectDTO=projectService.getProject(prjid);
		return new ResponseEntity<ProjectDTO>(projectDTO,HttpStatus.OK);
	}
	
	@PostMapping("/storeProject")
	public String storeProject(@RequestBody ProjectDTO projectDTO) throws ProjectException{
		String response=projectService.storeProject(projectDTO);
		return response;
	}
	
	@GetMapping("/getApplied")
	public List<FresherDTO> getApplied() throws ProjectException{
		System.out.println("hi");
		List<ProjectDTO> list=projectService.getProjects();
		List<FresherDTO> appliedFreshers=new ArrayList<FresherDTO>();
		RestTemplate restTemplate=new RestTemplate();
		List<FresherDTO> fresherList=restTemplate.getForObject("http://localhost:8083/getFreshers", List.class);
		for(ProjectDTO prj:list) {
			String applied=prj.getAppliedList();
			String appliedList[]=applied.split(",");
			for(String email:appliedList) {
				System.out.println(email);
				for(FresherDTO frs:fresherList) {
					if(frs.getEmaild().equals(email)) {
						appliedFreshers.add(frs);
					}
				}
			}
		}
		return appliedFreshers;
	}
}
